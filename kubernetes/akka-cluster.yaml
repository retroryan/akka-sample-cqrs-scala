apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cqrs-service
  name: cqrs-service
  namespace: cassandra-testing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cqrs-service
  template:
    metadata:
      labels:
        app: cqrs-service
        actorSystemName: cqrs-service
    spec:
      containers:
      - name: cqrs-service
        image: image-registry.openshift-image-registry.svc:5000/cassandra-testing/akka-sample-cqrs-scala:1.8
        readinessProbe:
          httpGet:
            path: /ready
            port: 8558
        livenessProbe:
          tcpSocket:
            port: 8558
        ports:
        # akka remoting
        - name: remoting
          containerPort: 2552
          protocol: TCP
        # akka-management and bootstrap
        - name: management
          containerPort: 8558
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: NAMESPACE
          value: cassandra-testing
        - name: CONF_ENV
          valueFrom:
            configMapKeyRef:
                name: app-config
                key: conf_env
        - name: HTTP_PORT
          valueFrom:
            configMapKeyRef:
                name: app-config
                key: http_port
        - name: CLUSTER_ROLE_ONE
          valueFrom:
            configMapKeyRef:
                name: app-config
                key: write-model
        - name: CASSANDRA_CONTACT_POINT_ONE
          valueFrom:
            configMapKeyRef:
                name: app-config
                key: cassandra-contact-point-one


---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
  namespace: cassandra-testing
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
  namespace: cassandra-testing
subjects:
# Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
# For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
- kind: User
  name: system:serviceaccount:cqrs:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
